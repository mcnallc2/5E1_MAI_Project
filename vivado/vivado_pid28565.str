/*

Xilinx Vivado v2018.3 (64-bit) [Major: 2018, Minor: 3]
SW Build: 2405991 on Thu Dec  6 23:36:41 MST 2018
IP Build: 2404404 on Fri Dec  7 01:43:56 MST 2018

Process ID (PID): 28565
License: Customer

Current time: 	Mon Apr 05 10:32:48 IST 2021
Time zone: 	Greenwich Mean Time (Europe/Dublin)

OS: Ubuntu
OS Version: 5.4.0-70-generic
OS Architecture: amd64
Available processors (cores): 4

Display: :0
Screen size: 1920x1080
Screen resolution (DPI): 96
Available screens: 2
Available disk space: 109 GB
Default font: family=Dialog,name=Dialog,style=plain,size=12

Java version: 	9.0.4 64-bit
Java home: 	/tools/Xilinx/Vivado/2018.3/tps/lnx64/jre9.0.4
Java executable location: 	/tools/Xilinx/Vivado/2018.3/tps/lnx64/jre9.0.4/bin/java
Java initial memory (-Xms): 	128 MB
Java maximum memory (-Xmx):	 3 GB


User name: 	cmcnally
User home directory: /home/cmcnally
User working directory: /home/cmcnally/Repos/robotic-arm-control-system-analysis/vivado
User country: 	IE
User language: 	en
User locale: 	en_IE

RDI_BASEROOT: /tools/Xilinx/Vivado
HDI_APPROOT: /tools/Xilinx/Vivado/2018.3
RDI_DATADIR: /tools/Xilinx/Vivado/2018.3/data
RDI_BINDIR: /tools/Xilinx/Vivado/2018.3/bin

Vivado preferences file location: /home/cmcnally/.Xilinx/Vivado/2018.3/vivado.xml
Vivado preferences directory: /home/cmcnally/.Xilinx/Vivado/2018.3/
Vivado layouts directory: /home/cmcnally/.Xilinx/Vivado/2018.3/layouts
PlanAhead jar file location: 	/tools/Xilinx/Vivado/2018.3/lib/classes/planAhead.jar
Vivado log file location: 	/home/cmcnally/Repos/robotic-arm-control-system-analysis/vivado/vivado.log
Vivado journal file location: 	/home/cmcnally/Repos/robotic-arm-control-system-analysis/vivado/vivado.jou
Engine tmp dir: 	./.Xil/Vivado-28565-noodle-box

Xilinx Environment Variables
----------------------------
XILINX: /tools/Xilinx/Vivado/2018.3/ids_lite/ISE
XILINX_DSP: /tools/Xilinx/Vivado/2018.3/ids_lite/ISE
XILINX_PLANAHEAD: /tools/Xilinx/Vivado/2018.3
XILINX_SDK: /tools/Xilinx/SDK/2018.3
XILINX_VIVADO: /tools/Xilinx/Vivado/2018.3
XILINX_VIVADO_HLS: /tools/Xilinx/Vivado/2018.3


GUI allocated memory:	200 MB
GUI max memory:		3,072 MB
Engine allocated memory: 818 MB

Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: start_gui 
// HMemoryUtils.trashcanNow. Engine heap size: 763 MB. GUI used memory: 43 MB. Current time: 4/5/21, 10:32:50 AM IST
selectList(PAResourceQtoS.SyntheticaGettingStartedView_RECENT_PROJECTS, "/home/cmcnally/Repos/digital-design-projects/integrated-systems-design/Hex_Calculator/hex_calculator/hex_calculator.xpr", 0); // q (Q, cp)
// bx (cp):  Open Project : addNotify
// Opening Vivado Project: /home/cmcnally/Repos/digital-design-projects/integrated-systems-design/Hex_Calculator/hex_calculator/hex_calculator.xpr. Version: Vivado v2018.3 
// TclEventType: DEBUG_PROBE_SET_CHANGE
// Tcl Message: open_project /home/cmcnally/Repos/digital-design-projects/integrated-systems-design/Hex_Calculator/hex_calculator/hex_calculator.xpr 
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILESET_TARGET_UCF_CHANGE
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_COMPLETED
// TclEventType: FILESET_TARGET_UCF_CHANGE
// TclEventType: RUN_COMPLETED
// TclEventType: FILESET_TARGET_UCF_CHANGE
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_DASHBOARD_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: FILE_SET_CHANGE
// TclEventType: PROJECT_NEW
// [GUI Memory]: 82 MB (+83430kb) [00:00:18]
// [Engine Memory]: 850 MB (+739400kb) [00:00:18]
// [GUI Memory]: 88 MB (+1988kb) [00:00:19]
// [GUI Memory]: 95 MB (+2703kb) [00:00:20]
// WARNING: HEventQueue.dispatchEvent() is taking  3784 ms.
// Tcl Message: open_project /home/cmcnally/Repos/digital-design-projects/integrated-systems-design/Hex_Calculator/hex_calculator/hex_calculator.xpr 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/tools/Xilinx/Vivado/2018.3/data/ip'. 
// [GUI Memory]: 111 MB (+11397kb) [00:00:21]
// [Engine Memory]: 896 MB (+3865kb) [00:00:21]
// Tcl Message: open_project: Time (s): cpu = 00:00:15 ; elapsed = 00:00:06 . Memory (MB): peak = 6387.703 ; gain = 106.148 ; free physical = 137 ; free virtual = 3145 
// Project name: hex_calculator; location: /home/cmcnally/Repos/digital-design-projects/integrated-systems-design/Hex_Calculator/hex_calculator; part: xc7a35tcpg236-1
dismissDialog("Open Project"); // bx (cp)
// [Engine Memory]: 950 MB (+9639kb) [00:00:23]
// Tcl Message: update_compile_order -fileset sources_1 
// HMemoryUtils.trashcanNow. Engine heap size: 980 MB. GUI used memory: 53 MB. Current time: 4/5/21, 10:33:06 AM IST
selectTree(PAResourceEtoH.FlowNavigatorTreePanel_FLOW_NAVIGATOR_TREE, "[, Program and Debug, Generate Bitstream]", 20, false); // u (Q, cp)
// Run Command: PAResourceCommand.PACommandNames_RUN_BITGEN
// A (cp): Synthesis is Out-of-date: addNotify
selectButton(RDIResource.BaseDialog_YES, "Yes"); // a (A)
// bx (cp):  Resetting Runs : addNotify
dismissDialog("Synthesis is Out-of-date"); // A (cp)
// TclEventType: RUN_MODIFY
// [Engine Memory]: 1,019 MB (+22376kb) [00:00:32]
// TclEventType: RUN_RESET
// Tcl Message: reset_run synth_1 
// TclEventType: RUN_RESET
// TclEventType: RUN_MODIFY
// [GUI Memory]: 117 MB (+811kb) [00:00:32]
// f (cp): Launch Runs: addNotify
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (f)
// 'cw' command handler elapsed time: 4 seconds
// TclEventType: FILESET_TARGET_UCF_CHANGE
dismissDialog("Launch Runs"); // f (cp)
// TclEventType: RUN_LAUNCH
// TclEventType: FILESET_TARGET_UCF_CHANGE
// TclEventType: RUN_LAUNCH
// bx (cp):  Generate Bitstream : addNotify
// Tcl Message: launch_runs impl_1 -to_step write_bitstream -jobs 2 
// TclEventType: RUN_MODIFY
// [Engine Memory]: 1,101 MB (+32615kb) [00:00:35]
// Tcl Message: [Mon Apr  5 10:33:12 2021] Launched synth_1... Run output will be captured here: /home/cmcnally/Repos/digital-design-projects/integrated-systems-design/Hex_Calculator/hex_calculator/hex_calculator.runs/synth_1/runme.log [Mon Apr  5 10:33:13 2021] Launched impl_1... Run output will be captured here: /home/cmcnally/Repos/digital-design-projects/integrated-systems-design/Hex_Calculator/hex_calculator/hex_calculator.runs/impl_1/runme.log 
dismissDialog("Generate Bitstream"); // bx (cp)
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_STEP_COMPLETED
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 1332 ms. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8048 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 2703 ms. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  8104 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3488 ms. Increasing delay to 10464 ms.
// WARNING: HTimer (ActiveMsgMonitor Process Messages Timer) is taking 259ms to process. Increasing delay to 2000 ms.
// WARNING: HTimer (StateMonitor Timer) is taking 1682ms to process. Increasing delay to 4000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1691 ms.
// WARNING: HSwingWorker (Update Runs Swing Worker) is taking 2985 ms. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  14017 ms.
// Thread: Attach Listener
// Thread: Common-Cleaner
// 	at java.base@9.0.4/java.lang.Object.wait(Native Method)
// 	at java.base@9.0.4/java.lang.ref.ReferenceQueue.remove(Unknown Source)
// 	at java.base@9.0.4/jdk.internal.ref.CleanerImpl.run(Unknown Source)
// 	at java.base@9.0.4/java.lang.Thread.run(Unknown Source)
// 	at java.base@9.0.4/jdk.internal.misc.InnocuousThread.run(Unknown Source)
// Thread: AWT-Shutdown
// 	at java.base@9.0.4/java.lang.Object.wait(Native Method)
// 	at java.base@9.0.4/java.lang.Object.wait(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.AWTAutoShutdown.run(Unknown Source)
// 	at java.base@9.0.4/java.lang.Thread.run(Unknown Source)
// Thread: SyntheticaAnimation 50
// 	at java.base@9.0.4/java.lang.Thread.sleep(Native Method)
// 	at de.javasoft.plaf.synthetica.painter.AnimationThreadFactory$AnimationThread.run(AnimationThreadFactory.java:119)
// Thread: Refresh Filesets Swing Worker
// 	at java.base@9.0.4/java.lang.Thread.sleep(Native Method)
// 	at ui.data.design.w.construct(SourceFile:2446)
// 	at ui.frmwork.y.run(SourceFile:204)
// 	at java.base@9.0.4/java.lang.Thread.run(Unknown Source)
// Thread: Java2D Disposer
// 	at java.base@9.0.4/java.lang.Object.wait(Native Method)
// 	at java.base@9.0.4/java.lang.ref.ReferenceQueue.remove(Unknown Source)
// 	at java.base@9.0.4/java.lang.ref.ReferenceQueue.remove(Unknown Source)
// 	at java.desktop@9.0.4/sun.java2d.Disposer.run(Unknown Source)
// 	at java.base@9.0.4/java.lang.Thread.run(Unknown Source)
// Thread: Update Runs Swing Worker
// 	at java.base@9.0.4/java.lang.Thread.sleep(Native Method)
// 	at ui.data.experiment.A.construct(SourceFile:311)
// 	at ui.frmwork.y.run(SourceFile:204)
// 	at java.base@9.0.4/java.lang.Thread.run(Unknown Source)
// Thread: SyntheticaAnimation 25
// 	at java.base@9.0.4/java.lang.Thread.sleep(Native Method)
// 	at de.javasoft.plaf.synthetica.painter.AnimationThreadFactory$AnimationThread.run(AnimationThreadFactory.java:119)
// Thread: Process Messages
// 	at java.base@9.0.4/java.lang.Thread.sleep(Native Method)
// 	at ui.frmwork.d.h.construct(SourceFile:132)
// 	at ui.frmwork.y.run(SourceFile:204)
// 	at java.base@9.0.4/java.lang.Thread.run(Unknown Source)
// Thread: Reference Handler
// 	at java.base@9.0.4/java.lang.ref.Reference.waitForReferencePendingList(Native Method)
// 	at java.base@9.0.4/java.lang.ref.Reference.processPendingReferences(Unknown Source)
// 	at java.base@9.0.4/java.lang.ref.Reference.access$000(Unknown Source)
// 	at java.base@9.0.4/java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)
// Thread: Image Animator 3
// 	at java.desktop@9.0.4/sun.awt.image.GifImageDecoder.parseImage(Native Method)
// 	at java.desktop@9.0.4/sun.awt.image.GifImageDecoder.readImage(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.GifImageDecoder.produceImage(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.InputStreamImageSource.doFetch(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.ImageFetcher.fetchloop(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.ImageFetcher.run(Unknown Source)
// Thread: Image Animator 3
// 	at java.desktop@9.0.4/sun.awt.image.GifImageDecoder.parseImage(Native Method)
// 	at java.desktop@9.0.4/sun.awt.image.GifImageDecoder.readImage(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.GifImageDecoder.produceImage(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.InputStreamImageSource.doFetch(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.ImageFetcher.fetchloop(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.ImageFetcher.run(Unknown Source)
// Thread: Finalizer
// 	at java.base@9.0.4/java.lang.Object.wait(Native Method)
// 	at java.base@9.0.4/java.lang.ref.ReferenceQueue.remove(Unknown Source)
// 	at java.base@9.0.4/java.lang.ref.ReferenceQueue.remove(Unknown Source)
// 	at java.base@9.0.4/java.lang.ref.Finalizer$FinalizerThread.run(Unknown Source)
// Thread: Batik CleanerThread
// 	at java.base@9.0.4/java.lang.Object.wait(Native Method)
// 	at java.base@9.0.4/java.lang.ref.ReferenceQueue.remove(Unknown Source)
// 	at java.base@9.0.4/java.lang.ref.ReferenceQueue.remove(Unknown Source)
// 	at org.apache.batik.util.CleanerThread.run(CleanerThread.java:106)
// Thread: Image Animator 3
// 	at java.base@9.0.4/java.lang.Thread.sleep(Native Method)
// 	at java.desktop@9.0.4/sun.awt.image.GifFrame.dispose(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.GifImageDecoder.readImage(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.GifImageDecoder.produceImage(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.InputStreamImageSource.doFetch(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.ImageFetcher.fetchloop(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.image.ImageFetcher.run(Unknown Source)
// Thread: AWT-EventQueue-1
// 	at java.desktop@9.0.4/javax.swing.plaf.basic.BasicLabelUI.propertyChange(Unknown Source)
// 	at com.jidesoft.plaf.basic.BasicStyledLabelUI.propertyChange(Unknown Source)
// 	at java.desktop@9.0.4/java.beans.PropertyChangeSupport.fire(Unknown Source)
// 	at java.desktop@9.0.4/java.beans.PropertyChangeSupport.firePropertyChange(Unknown Source)
// 	at java.desktop@9.0.4/java.beans.PropertyChangeSupport.firePropertyChange(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.Component.firePropertyChange(Unknown Source)
// 	at com.jidesoft.grid.StyledTableCellRenderer.firePropertyChange(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JLabel.setText(Unknown Source)
// 	at com.jidesoft.grid.StyledTableCellRenderer.setValue(Unknown Source)
// 	at ui.utils.i.j.a.j.setValue(SourceFile:84)
// 	at com.jidesoft.grid.StyledTableCellRenderer.customizeStyledLabel(Unknown Source)
// 	at ui.utils.o.r.f.customizeStyledLabel(SourceFile:29)
// 	at com.jidesoft.grid.StyledTableCellRenderer.getTableCellRendererComponent(Unknown Source)
// 	at ui.utils.i.j.a.j.getTableCellRendererComponent(SourceFile:157)
// 	at ui.b.c.b.x.getTableCellRendererComponent(SourceFile:1207)
// 	at ui.b.o.aD.getTableCellRendererComponent(SourceFile:1108)
// 	at com.jidesoft.grid.TreeTableCellRenderer.getTableCellRendererComponent(Unknown Source)
// 	at ui.utils.i.j.av.getTableCellRendererComponent(SourceFile:1153)
// 	at ui.b.o.aB.getTableCellRendererComponent(SourceFile:843)
// 	at com.jidesoft.grid.JideTable.prepareRenderer(Unknown Source)
// 	at com.jidesoft.grid.CellStyleTable.prepareRenderer(Unknown Source)
// 	at ui.b.o.ax.prepareRenderer(SourceFile:850)
// 	at com.jidesoft.plaf.basic.BasicJideTableUIDelegate.paintCell(Unknown Source)
// 	at com.jidesoft.plaf.basic.BasicCellSpanTableUIDelegate.c(Unknown Source)
// 	at com.jidesoft.plaf.basic.BasicCellSpanTableUIDelegate.paint(Unknown Source)
// 	at ui.utils.lnf.HSyntheticaTreeTableUIDelegate.paint(SourceFile:43)
// 	at com.jidesoft.plaf.basic.BasicCellSpanTableUI.paint(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.plaf.ComponentUI.update(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paintComponent(Unknown Source)
// 	at com.jidesoft.grid.CellStyleTable.paintComponent(Unknown Source)
// 	at ui.utils.i.j.ak.paintComponent(SourceFile:794)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paint(Unknown Source)
// 	at ui.utils.i.j.ak.paint(SourceFile:772)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paintChildren(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paint(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JViewport.paint(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paintChildren(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paint(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paintChildren(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paint(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paintChildren(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paint(Unknown Source)
// 	at ui.b.c.b.p.paint(SourceFile:1080)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paintChildren(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paint(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paintToOffscreen(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.RepaintManager$PaintManager.paintDoubleBufferedImpl(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.RepaintManager$PaintManager.paint(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.BufferStrategyPaintManager.paint(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.RepaintManager.paint(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent._paintImmediately(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.JComponent.paintImmediately(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.RepaintManager$4.run(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.RepaintManager$4.run(Unknown Source)
// 	at java.base@9.0.4/java.security.AccessController.doPrivileged(Native Method)
// 	at java.base@9.0.4/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.RepaintManager.prePaintDirtyRegions(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.RepaintManager.access$1200(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.RepaintManager$ProcessingRunnable.run(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.event.InvocationEvent.dispatch(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.EventQueue.dispatchEventImpl(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.EventQueue.access$500(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.EventQueue$3.run(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.EventQueue$3.run(Unknown Source)
// 	at java.base@9.0.4/java.security.AccessController.doPrivileged(Native Method)
// 	at java.base@9.0.4/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.EventQueue.dispatchEvent(Unknown Source)
// 	at ui.frmwork.b.d.dispatchEvent(SourceFile:88)
// 	at java.desktop@9.0.4/java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.EventDispatchThread.pumpEvents(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.EventDispatchThread.pumpEvents(Unknown Source)
// 	at java.desktop@9.0.4/java.awt.EventDispatchThread.run(Unknown Source)
// Thread: SyntheticaCleanerThread
// 	at java.base@9.0.4/java.lang.Thread.sleep(Native Method)
// 	at de.javasoft.plaf.synthetica.StyleFactory$ComponentPropertyStore$1.run(StyleFactory.java:1846)
// Thread: TimerQueue
// 	at java.base@9.0.4/jdk.internal.misc.Unsafe.park(Native Method)
// 	at java.base@9.0.4/java.util.concurrent.locks.LockSupport.parkNanos(Unknown Source)
// 	at java.base@9.0.4/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(Unknown Source)
// 	at java.base@9.0.4/java.util.concurrent.DelayQueue.take(Unknown Source)
// 	at java.desktop@9.0.4/javax.swing.TimerQueue.run(Unknown Source)
// 	at java.base@9.0.4/java.lang.Thread.run(Unknown Source)
// Thread: hw_ila_monitor
// 	at java.base@9.0.4/java.lang.Object.wait(Native Method)
// 	at java.base@9.0.4/java.lang.Object.wait(Unknown Source)
// 	at java.base@9.0.4/java.util.TimerThread.mainLoop(Unknown Source)
// 	at java.base@9.0.4/java.util.TimerThread.run(Unknown Source)
// Thread: SyntheticaAnimation 70
// 	at java.base@9.0.4/java.lang.Thread.sleep(Native Method)
// 	at de.javasoft.plaf.synthetica.painter.AnimationThreadFactory$AnimationThread.run(AnimationThreadFactory.java:119)
// Thread: Monitor HEventQueue
// 	at java.base@9.0.4/java.lang.Thread.dumpThreads(Native Method)
// 	at java.base@9.0.4/java.lang.Thread.getAllStackTraces(Unknown Source)
// 	at ui.utils.d.c.exx(SourceFile:484)
// 	at ui.frmwork.b.e.construct(SourceFile:140)
// 	at ui.frmwork.y.run(SourceFile:204)
// 	at java.base@9.0.4/java.lang.Thread.run(Unknown Source)
// Thread: AWT-XAWT
// 	at java.desktop@9.0.4/sun.awt.X11.XToolkit.waitForEvents(Native Method)
// 	at java.desktop@9.0.4/sun.awt.X11.XToolkit.run(Unknown Source)
// 	at java.desktop@9.0.4/sun.awt.X11.XToolkit.run(Unknown Source)
// 	at java.base@9.0.4/java.lang.Thread.run(Unknown Source)
// Thread: main
// 	at java.base@9.0.4/java.lang.Thread.sleep(Native Method)
// 	at ui.PlanAhead.b(SourceFile:1030)
// 	at ui.PlanAhead.jswMain(SourceFile:1084)
// Thread: Thread-1
// WARNING: HEventQueue.dispatchEvent() is taking  2268 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 598 ms. Decreasing delay to 2598 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1117 ms.
// WARNING: HTimer (ActiveMsgMonitor Process Messages Timer) is taking 2508ms to process. Increasing delay to 3000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2508 ms.
// WARNING: HTimer (StateMonitor Timer) is taking 946ms to process. Increasing delay to 5000 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  2996 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 3404 ms. Increasing delay to 10212 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3391 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1003 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  7893 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 780 ms. Decreasing delay to 2780 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1907 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1372 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1955 ms.
// WARNING: HSwingWorker (Refresh Filesets Swing Worker) is taking 2164 ms. Increasing delay to 6492 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  3117 ms.
